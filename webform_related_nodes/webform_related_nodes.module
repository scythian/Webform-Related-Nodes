<?php

/**
 * @file
 * Code for the Webform Related Nodes module.
 */

/**
 * Implements hook_webform_component_info().
 */
function webform_related_nodes_webform_component_info() {
  $components = array();
  $components['related_nodes'] = array(
    'label' => t('Related Nodes'),
    'description' => t('Allows creation of checkboxes, radio buttons, or select menus with dynamic options list.'),
    'file' => 'components/related_nodes.inc',
  );
  return $components;
}

/**
 * Implements hook_views_data_alter().
 */
function webform_related_nodes_views_data_alter(&$data) {
  // Related Nodes field.
  $data['webform_submissions']['related_node_field'] = array(
    'title' => t('Related node field.'),
    'help' => t('Provide a related nodes field rendering.'),
    'real field' => 'sid',
    'group' => t('Webform submission data'),
    'field' => array(
      'handler' => 'views_handler_related_nodes',
      'click sortable' => FALSE,
      'webform_expand' => FALSE,
    ),
  );

  // Submission count (node).
  $data['node']['related_nodes_count'] = array(
    'group' => t('Webform'),
    'field' => array(
      'title' => t('Count submission for related node.'),
      'help' => t('The number of webform submissions for node.'),
      'handler' => 'views_handler_related_nodes_count',
      'count_type' => 'node',
    ),
  );

}

/**
 * Get list of related components defined for webform.
 *
 * @param int $webform_nid
 *   Webform ID.
 *
 * @return \DatabaseStatementInterface|null
 *   Related components result list.
 */
function _webform_related_nodes_get_related_components($webform_nid) {
  $result = new stdClass();

  if (!empty($webform_nid)) {
    $query = db_select('webform_component', 'w');
    $query->fields('w', array(
      'cid',
      'name',
      'extra',
    ));
    $query->condition('w.type', 'related_nodes');
    $query->condition('w.nid', $webform_nid);
    $query->orderBy('w.name', 'ASC');
    $result = $query->execute();
  }

  return $result;
}
